name: Terraform CI/CD

on:
  pull_request:
    branches: [main]
    paths:
      - 'environments/**'
      - 'modules/**'
  push:
    branches: [main]
    paths:
      - 'environments/**'
      - 'modules/**'

env:
  TF_VERSION: '1.6.0'
  TFLINT_VERSION: 'v0.48.0'

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, qa, stage, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: environments/${{ matrix.environment }}
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: environments/${{ matrix.environment }}
        run: terraform validate

      - name: TFLint
        working-directory: environments/${{ matrix.environment }}
        run: |
          tflint --init
          tflint

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: environments/${{ matrix.environment }}
          framework: terraform

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        environment: [dev, qa, stage, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Plan
        working-directory: environments/${{ matrix.environment }}
        run: |
          terraform init
          terraform plan

  terraform-apply-dev:
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/main'
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Apply Dev
        working-directory: environments/dev
        run: |
          terraform init
          terraform apply -auto-approve

  terraform-apply-qa:
    runs-on: ubuntu-latest
    needs: terraform-apply-dev
    if: github.ref == 'refs/heads/main'
    environment: qa
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Apply QA
        working-directory: environments/qa
        run: |
          terraform init
          terraform apply -auto-approve

  terraform-apply-stage:
    runs-on: ubuntu-latest
    needs: terraform-apply-qa
    if: github.ref == 'refs/heads/main'
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Apply Stage
        working-directory: environments/stage
        run: |
          terraform init
          terraform apply -auto-approve

  terraform-apply-prod:
    runs-on: ubuntu-latest
    needs: terraform-apply-stage
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Apply Prod
        working-directory: environments/prod
        run: |
          terraform init
          terraform apply -auto-approve